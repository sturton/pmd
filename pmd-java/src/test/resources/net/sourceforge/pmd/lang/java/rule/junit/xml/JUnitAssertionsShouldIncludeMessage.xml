<?xml version="1.0" encoding="UTF-8"?>
<test-data>
    <test-code>
        <description><![CDATA[
assertArrayEquals ok
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertArrayEquals("[1] != [1]", new int[] {1}, new int[] {1});
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertArrayEquals bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertArrayEquals(new int[] {1}, new int[] {1});
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertEquals ok
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertEquals("1 != 1", 1, 1);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertEquals with string variable as message ok
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  String s = "1 != 1";
  assertEquals(s, 1, 1);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertEquals with delta ok
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertEquals("foo", 1, 2, 3);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertEquals bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertEquals(1, 1);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertEquals with delta bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertEquals(1, 2, 3);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertEquals with delta but missing assertion message not ok
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  double d = 1;
  assertEquals(d, 1, 1);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertFalse ok
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void testBar() {
  assertFalse("foo!", "foo".equals("foo"));
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertFalse bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void testBar() {
  assertFalse("foo".equals("foo"));
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertNotNull OK
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertNotNull("foo", null);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertNotNull bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertNotNull(null);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertNotSame ok
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertNotSame("1 == 2", 1, 2);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertNotSame bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertNotSame(1, 2);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertNull OK
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertNull("it's not null", null);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertNull bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertNull(null);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertSame OK
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertSame("not same!", null, null);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertSame bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertSame(null, null);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertThat ok
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertThat("Zero is one", 0, is(not(1)));
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertThat bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertThat(0, is(not(1)));
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertTrue ok
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertTrue("foo", "foo".equals("foo"));
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
assertTrue bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  assertTrue("foo".equals("foo"));
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
fail ok
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  fail("foo");
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
fail bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  fail();
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
find that pesky bug
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import junit.framework.TestCase;
public class Foo extends TestCase {
 public void test1() {
  this.test1("foo");
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
Not a JUnit test - assertEquals bad
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
 public void test1() {
  assertEquals(1, 1);
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
JUnit 4 - assertEquals
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import org.junit.Test;
public class Foo {
 @Test
 public void foo() {
  assertEquals(1, 1);
 } 
}
     ]]></code>
    </test-code>
</test-data>
